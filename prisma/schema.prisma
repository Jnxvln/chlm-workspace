generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  phone        String
  address      String?
  email        String?
  company      String?
  locations    Location[]
  Delivery     Delivery[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Location {
  id           Int            @id @default(autoincrement())
  address      String
  coordinates  String?
  directions   String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  contactId    Int
  contact      Contact        @relation(fields: [contactId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Delivery {
  id              Int      @id @default(autoincrement())
  deliveryDate    DateTime
  contactId       Int
  deliveryPhone   String?
  productName     String?
  productQuantity String?
  notes           String?
  completed       Boolean?
  isPaid          Boolean?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Contact         Contact  @relation(fields: [contactId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Driver {
  id             Int       @id @default(autoincrement())
  firstName      String
  lastName       String
  defaultTruck   String?
  endDumpPayRate Float
  flatBedPayRate Float
  ncPayRate      Float
  dateHired      DateTime?
  dateReleased   DateTime?
  isActive       Boolean?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Haul           Haul[]
  Workday        Workday[]
}

model FreightRoute {
  id               Int            @id @default(autoincrement())
  freightCost      Float
  notes            String?
  vendorId         Int
  vendorLocationId Int
  isActive         Boolean?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  Vendor           Vendor         @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  VendorLocation   VendorLocation @relation(fields: [vendorLocationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Haul             Haul[]
}

model Haul {
  id               Int            @id @default(autoincrement())
  dateHaul         DateTime
  driverId         Int
  truck            String
  customer         String?
  invoice          String?
  chInvoice        String?
  vendorLocationId Int
  freightRouteId   Int
  product          String?
  tons             Float?
  rate             Float?
  loadType         LoadType       @default(ENDDUMP)
  miles            Float?
  payRate          Float?
  driverPay        Float?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  Driver           Driver         @relation(fields: [driverId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  FreightRoute     FreightRoute   @relation(fields: [freightRouteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  VendorLocation   VendorLocation @relation(fields: [vendorLocationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vendor {
  id                  Int              @id @default(autoincrement())
  name                String
  shortName           String
  chtFuelSurcharge    Float            @default(0.00)
  vendorFuelSurcharge Float            @default(0.00)
  isActive            Boolean?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  FreightRoute        FreightRoute[]
  VendorLocation      VendorLocation[]
  VendorProduct       VendorProduct[]
}

model VendorLocation {
  id            Int             @id @default(autoincrement())
  name          String
  vendorId      Int
  isActive      Boolean?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  FreightRoute  FreightRoute[]
  Haul          Haul[]
  Vendor        Vendor          @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  VendorProduct VendorProduct[]
}

model VendorProduct {
  id               Int            @id @default(autoincrement())
  vendorId         Int
  vendorLocationId Int
  name             String
  productCost      Float
  notes            String?
  isActive         Boolean?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  Vendor           Vendor         @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  VendorLocation   VendorLocation @relation(fields: [vendorLocationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Workday {
  id        Int      @id @default(autoincrement())
  driverId  Int
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Driver    Driver   @relation(fields: [driverId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum LoadType {
  ENDDUMP
  FLATBED
}

enum Role {
  ADMIN
  USER
}
